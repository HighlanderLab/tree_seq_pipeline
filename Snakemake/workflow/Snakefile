# import some python modules to define variables
from os import listdir
from pathlib import Path
import shutil
from os.path import isfile, join


##### set minimum snakemake version #####
min_version("6.4.1")


##### setup report #####
configfile: 'config/tsinfer.yaml'
report: "reports/tsinfer.rst"

##### setup singularity #####
# CAn we set conda env here???

##### Define some variables $$$$$
# files are expected to be stored in the vcfDir folder.
# files for each chromosome should be in a separate folder (for clarity).
# defining variables that will be used throughout the script
vcfdir=config['vcfDir'] # from config file, the path to vcfs
chromosomes = [f'Chr_{n}' for n in range(1, config['noChromosomes'] + 1)]
# set a list of 'Chr' + chr# combinations to be used as wildcards

allfiles = [f.split('.')[0].split('_')[1] for f in listdir(f'{vcfdir}/{chromosomes[0]}')
if isfile(join(f'{vcfdir}/{chromosomes[0]}', f)) and 'vcf' in f]
# defines a list of names for all different files

VCFs = [f for f in listdir(f'{vcfdir}')
if isfile(join(f'{vcfdir}', f)) and f.endswith('vcf.gz')]

##### load rules #####
if len(VCFs) == 1:
    include: "rules/split.smk"
if len(allfiles) > 1:
    include: "rules/merge_samples_vcf.smk"
elif (os.path.isfile(f'{vcfdir}/Chr_1/Chr_1_split.vcf.gz')):
    rule rename_vcf_file:
        input: [f'{vcfdir}' + x
            for x in expand('/{{chromosome}}/{{chromosome}}_split.vcf.gz',
                chromosome=chromosomes)]
        output: [f'{vcfdir}' + x
            for x in expand('/{{chromosome}}/{{chromosome}}.vcf.gz',
                chromosome=chromosomes)]
        shell:
            "mv {input} {output}"
include: "rules/prepare_files_for_tsinfer.smk"
include: "rules/phasing.smk"
include: "rules/infer_trees.smk"


##### target rules #####
# At the end it should generate a phased vcf file that combines all files for
# each chromosome. These files are stored in the vcf folder declaired in the
# configuration file. It also checks that vcfs have been filtered before merged
rule all:
    input:
        expand(f'{vcfdir}/{{chromosome}}/{{chromosome}}_{{file}}.filtered.vcf.gz',
        chromosome=chromosomes, file=allfiles),
        expand('Tsinfer/trees/{chromosome}.trees', chromosome=chromosomes) # tree inference
